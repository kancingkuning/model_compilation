# -*- coding: utf-8 -*-
"""Predicting House Price with Naive Bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fK_gr0wVa1vbtrfM50KteckXM6RiqXkK

#NEBAK HARGA RUMAH GUSTI ALLAH TEHNOLOGI
"""

from google.colab import files
upload = files.upload()

import pandas as pd
df = pd.read_csv('/content/Data Latihan Regresi (House).csv').dropna()
df.head()

import seaborn as sns
x = df.current_price
y = df.raw_price
sns.scatterplot(x=x, y=y)

n = df.current_price.size

xbar, ybar = x.mean(), y.mean()

import numpy as np
cov_mat = np.cov(x, y)

cov_mat

beta1 = cov_mat[0,1]/cov_mat[0,0]
beta1

beta0 = ybar - beta1 * xbar

xline = x
yline = beta0 + beta1 * xline

x_i = 80.55
y_i = beta0 + beta1 * x_i
y_i

import matplotlib.pyplot as plt
sns.scatterplot(x=x, y=y)
plt.plot(xline, yline, color='orange')
_ = plt.scatter(x_i, y_i, marker='o', color='purple')

A = np.array([[8,20], [20,6]])
A

z = np.array([56, 154])

Ainv = np.linalg.inv(A)
Ainv

W = np.dot(Ainv, z)
W

xline = np.linspace(1, 4, 1000)
yline = W[0] + W[1] * xline

X = np.concatenate([np.matrix(np.ones(x.size)).T, np.matrix(x).T])

py = (35/36.)*(1/1000) + (1/36.)* (999/1000.)
py

py_givenx = 0.972
px = .0001

def bayes(my_px, my_pygivenx, my_py):
  return(my_px*my_pygivenx)/my_py

bayes(px, py_givenx, py)